<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xsd</name>
    </assembly>
    <members>
        <member name="T:System.Extensions.CodeDom.Xsd.XsdWrapperConfig">
            <summary>
            Summary description for XsdWrapperConfig.
            </summary>
        </member>
        <member name="T:System.Extensions.CodeDom.Xsd.XsdWrapperGenerator">
            <summary>
            Transforms the XSD wrapper classes outputed by the Xsd.exe utility
            to nicer classes using Reflection.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.Xsd.XsdWrapperGenerator.#ctor(System.String)">
            <summary>
            Creates a new wrapper generator.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:System.Extensions.CodeDom.Xsd.XsdWrapperGenerator.Add(System.Type)">
            <summary>
            Adds a class to the wrapped class list
            </summary>
            <param name="t"></param>
        </member>
        <member name="T:System.Extensions.CodeDom.TypeHelper">
            <summary>
            Helper static class for Type related tasks
            </summary>
            <!-- Failed to insert some or all of included XML --><include file="GUnit.CodeDom.Doc.xml" path="doc/remarkss/remarks[@name='TypeHelper']" />
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.HasCustomAttribute(System.Type,System.Type)">
            <summary>
            Gets a value indicating if the type <paramref name="t"/> is tagged
            by a <paramref name="customAttributeType"/> instance.
            </summary>
            <param name="t">type to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            true if <param name="t"/> is tagged by a <paramref name="customAttributeType"/>
            attribute, false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="t"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <remarks>
            You can use this method to check that a type is tagged by an attribute.
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.HasCustomAttribute(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Gets a value indicating if the property info <paramref name="t"/> is tagged
            by a <paramref name="customAttributeType"/> instance.
            </summary>
            <param name="t">property to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            true if <param name="t"/> is tagged by a <paramref name="customAttributeType"/>
            attribute, false otherwise.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="t"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <remarks>
            You can use this property to check that a method is tagged by a
            specified attribute.
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.GetFirstCustomAttribute(System.Type,System.Type)">
            <summary>
            Gets the first instance of <paramref name="customAttributeType"/> 
            from the type <paramref name="t"/> custom attributes.
            </summary>
            <param name="t">type to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            First instance of <paramref name="customAttributeTyp"/>
            from the type <paramref name="t"/> custom attributes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="t"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="t"/> is not tagged by an attribute of type
            <paramref name="customAttributeType"/>
            </exception>
            <remarks>
            You can use this method to retreive a specified attribute
            instance
            </remarks>
        </member>
        <member name="M:System.Extensions.CodeDom.TypeHelper.GetFirstCustomAttribute(System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Gets the first instance of <paramref name="customAttributeType"/> 
            from the property <paramref name="mi"/> custom attributes.
            </summary>
            <param name="mi">property to test</param>
            <param name="customAttributeType">custom attribute type to search</param>
            <returns>
            First instance of <paramref name="customAttributeTyp"/>
            from the property <paramref name="mi"/> custom attributes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="mi"/> or <paramref name="customAttributeType"/>
            is a null reference
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="mi"/> is not tagged by an attribute of type
            <paramref name="customAttributeType"/>
            </exception>
            <remarks>
            You can use this property to retreive a specified attribute
            instance of a method.
            </remarks>
        </member>
    </members>
</doc>
